-- MySQL Script generated by MySQL Workbench
-- Sun Feb 18 19:31:08 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema stocks
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `stocks` ;

-- -----------------------------------------------------
-- Schema stocks
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `stocks` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `stocks` ;

-- -----------------------------------------------------
-- Table `company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `company` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `company` (
  `id` VARCHAR(50) NOT NULL,
  `name` VARCHAR(200) NULL,
  `licence` VARCHAR(100) NULL,
  `phone` VARCHAR(15) NULL,
  `email` VARCHAR(200) NULL,
  `address` VARCHAR(3000) NULL,
  `username` VARCHAR(100) NULL,
  `password` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `trader`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `trader` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `trader` (
  `id` VARCHAR(50) NOT NULL,
  `title` VARCHAR(5) NULL,
  `f_name` VARCHAR(100) NULL,
  `m_name` VARCHAR(100) NULL,
  `l_name` VARCHAR(100) NULL,
  `gender` CHAR NULL,
  `id_proof` VARCHAR(100) NULL,
  `dob` DATE NULL,
  `phone` VARCHAR(15) NULL,
  `email` VARCHAR(200) NULL,
  `address` VARCHAR(3000) NULL,
  `username` VARCHAR(200) NULL,
  `password` VARCHAR(200) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `transaction_party`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `transaction_party` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `transaction_party` (
  `id` VARCHAR(50) NOT NULL,
  `company_id` VARCHAR(50) NULL,
  `trader_id` VARCHAR(50) NULL,
  `balance` DECIMAL(11,2) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `companyIdParty`
    FOREIGN KEY (`company_id`)
    REFERENCES `company` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `traderIdParty`
    FOREIGN KEY (`trader_id`)
    REFERENCES `trader` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `companyIdTransactionParty_idx` ON `transaction_party` (`company_id` ASC);

SHOW WARNINGS;
CREATE INDEX `traderIdTransactionParty_idx` ON `transaction_party` (`trader_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `security_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `security_types` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `security_types` (
  `id` VARCHAR(50) NOT NULL,
  `name` VARCHAR(50) NULL,
  `description` VARCHAR(500) NULL,
  `voting_rights` TINYINT NULL,
  `transferrable` TINYINT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `securities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `securities` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `securities` (
  `id` VARCHAR(50) NOT NULL,
  `company_id` VARCHAR(50) NULL,
  `type_id` VARCHAR(50) NULL,
  `price` DECIMAL(11,2) NULL,
  `registered` INT NULL,
  `issued` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `companyIdSecurities`
    FOREIGN KEY (`company_id`)
    REFERENCES `company` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `typesIdSecurities`
    FOREIGN KEY (`type_id`)
    REFERENCES `security_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `companyIdSecurities_idx` ON `securities` (`company_id` ASC);

SHOW WARNINGS;
CREATE INDEX `typesIdSecurities_idx` ON `securities` (`type_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `transaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `transaction` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `transaction` (
  `id` VARCHAR(50) NOT NULL,
  `buyer_id` VARCHAR(50) NULL,
  `seller_id` VARCHAR(50) NULL,
  `security_id` VARCHAR(50) NULL,
  `number` INT NULL,
  `amount` DECIMAL(11,2) NULL,
  `t_datetime` DATETIME NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `buyerPartyIdTransaction`
    FOREIGN KEY (`buyer_id`)
    REFERENCES `transaction_party` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sellerPartyIdTransaction`
    FOREIGN KEY (`seller_id`)
    REFERENCES `transaction_party` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `securityIdTransaction`
    FOREIGN KEY (`security_id`)
    REFERENCES `securities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `buyerPartyIdTransaction_idx` ON `transaction` (`buyer_id` ASC);

SHOW WARNINGS;
CREATE INDEX `sellerPartyIdTransaction_idx` ON `transaction` (`seller_id` ASC);

SHOW WARNINGS;
CREATE INDEX `securityIdTransaction_idx` ON `transaction` (`security_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `security_trend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `security_trend` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `security_trend` (
  `security_id` VARCHAR(50) NOT NULL,
  `closing_datetime` DATETIME NULL,
  `closing_price` DECIMAL(11,2) NULL,
  CONSTRAINT `securityIdTrend`
    FOREIGN KEY (`security_id`)
    REFERENCES `securities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `securityIdTrend_idx` ON `security_trend` (`security_id` ASC);

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
